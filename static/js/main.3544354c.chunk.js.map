{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","page","className","href","onClick","Array","map","_","pageIndex","cn","active","disabled","items","from","to","numbers","n","push","getNumbers","totalItems","length","App","useState","setCurrentPage","setPerPage","fromItem","endItem","min","visibleItems","slice","id","value","onChange","event","newPerPage","parseInt","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAmB,SAACC,GACxBL,EAAaK,IAef,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAA2B,IAAhBP,EAAoB,qBAAuB,YAA1D,SACE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QApBe,WACjBT,EAAc,GAChBK,EAAiBL,EAAc,IAa7B,oBAWD,YAAIU,MAAMR,IAAaS,KAAI,SAACC,EAAGC,GAAJ,OAC1B,oBAEEN,UAAWO,IACT,YACA,CAAEC,OAAQf,IAAgBa,EAAY,IAJ1C,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVC,KAAI,WAAMK,EAAY,GACtBJ,QAAS,kBAAMJ,EAAiBQ,EAAY,IAJ9C,SAMGA,EAAY,KAbjB,eACeA,EAAY,OAiB7B,oBAAIN,UAAWO,IACb,YACA,CAAEE,SAAUhB,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QAjDe,WACjBT,EAAcE,GAChBG,EAAiBL,EAAc,IA0C7B,wBCnEFiB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBZ,KAAI,SAAAU,GAAC,qBAAYA,MACdG,EAAaP,EAAMQ,OAEZC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB4B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB8B,EAAhB,KACMC,GAAY9B,EAAc,GAAKD,EAAU,EACzCgC,EAAU5B,KAAK6B,IAAIhC,EAAcD,EAASyB,GAC1CS,EACJhB,EAAMiB,OAAOlC,EAAc,GAAKD,EAASC,EAAcD,GASzD,OACE,sBAAKQ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC8B,EADjC,cAC+CC,EAD/C,eAC6DP,EAD7D,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAOrC,EACPsC,SAtBkB,SAACC,GAC3B,IAAMC,EAAaC,SAASF,EAAMG,OAAOL,MAAO,IAEhDP,EAAWU,GACXX,EAAe,IAaT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOM,QAAQ,kBAAkBnC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAO0B,EACPzB,QAASA,EACTC,YAAaA,EACbC,aAAc2B,IAGhB,6BACGK,EAAatB,KAAI,SAACgC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YE3DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3544354c.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    onPageChange(page);\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={currentPage === 1 ? 'page-item disabled' : 'page-item'}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {[...Array(totalPages)].map((_, pageIndex) => (\n        <li\n          key={`page-${pageIndex + 1}`}\n          className={cn(\n            'page-item',\n            { active: currentPage === pageIndex + 1 },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageIndex + 1}`}\n            onClick={() => handlePageChange(pageIndex + 1)}\n          >\n            {pageIndex + 1}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === totalPages },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\nconst totalItems = items.length;\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const fromItem = (currentPage - 1) * perPage + 1;\n  const endItem = Math.min(currentPage * perPage, totalItems);\n  const visibleItems\n  = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = parseInt(event.target.value, 10);\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItem} - ${endItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}